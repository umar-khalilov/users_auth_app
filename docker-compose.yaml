services:
    database:
        container_name: database
        image: postgres:14-alpine3.16
        env_file:
            - ./.development.env
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_DB: ${DB_NAME}
            PG_DATA: /var/lib/postgresql/data
        ports:
            - ${DB_PORT}:${DB_PORT}
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - users-net
        tty: true
        restart: always
    cache:
        container_name: cache
        image: redis:7.0.9-alpine
        env_file:
            - ./.development.env
        ports:
            - ${REDIS_PORT}:${REDIS_PORT}
        volumes:
            - cache:/data
        networks:
            - users-net
        links:
            - database
        restart: on-failure
    node-app:
        container_name: node-app
        build:
            context: ./
            dockerfile: ./Dockerfile
            target: development
        # RUN in debug mode: npm run start:debug --> Also start your debugger
        # Run in dev mode: npm run start:dev
        command: npm run start:dev
        volumes:
            - ./:/usr/src/app
            - /usr/src/app/node_modules
        env_file:
            - ./.development.env
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
            - ${DEBUG_PORT}:${DEBUG_PORT}
        networks:
            - users-net
        depends_on:
            - database
            - cache
        restart: on-failure

volumes:
    pgdata:
        driver: local
    cache:
        driver: local
    node-app:

networks:
    users-net:
        driver: bridge
